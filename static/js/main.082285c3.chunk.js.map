{"version":3,"sources":["Firebase.js","App.js","serviceWorker.js","components/Edit.js","components/Create.js","components/Comment.js","components/Show.js","components/Nav.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCollectionUpdate","querySnapshot","posts","forEach","doc","_doc$data","data","title","description","author","push","key","id","setState","ref","firestore","collection","unsubcribe","state","onSnapshot","react_default","a","createElement","className","react_router_dom","to","process","map","post","i","concat","Component","Boolean","window","location","hostname","match","Edit","onChange","bind","assertThisInitialized","onSubmit","_this2","params","get","then","exists","board","console","log","e","target","name","value","_this3","preventDefault","_this$state","set","docRef","history","catch","error","type","placeholder","React","Create","add","_this$state2","Comment","comment","Show","comments","loadComments","deleteComment","refComment","res","docs","_this4","isLoading","_this5","delete","onClick","com","components_Comment","Nav","style","float","padding","marginLeft","marginTop","ReactDOM","render","basename","components_Nav","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.082285c3.chunk.js","sourcesContent":["import * as firebase from 'firebase';\r\n\r\nconst settings = { timestampsInSnapshots: true};\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD_3l_vHaaKrmXoho9-49WICfH-OoZ77po\",\r\n    authDomain: \"react-firebase-a93b8.firebaseapp.com\",\r\n    databaseURL: \"https://react-firebase-a93b8.firebaseio.com\",\r\n    projectId: \"react-firebase-a93b8\",\r\n    storageBucket: \"\",\r\n    messagingSenderId: \"535238636855\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nfirebase.firestore().settings(settings);\r\n\r\nexport default firebase;","import React, { Component } from 'react';\nimport './App.css';\n\n//Router\nimport { Link } from 'react-router-dom';\n\n//Firebase\nimport firebase from './Firebase';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = firebase.firestore().collection('posts');\n    this.unsubcribe = null;\n\n    this.state = {\n      posts: []\n    }\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const posts = [];\n    querySnapshot.forEach(doc => {\n      const { title, description, author } = doc.data();\n      posts.push({\n        key: doc.id,\n        doc,\n        title,\n        description,\n        author,\n      });\n    });\n    this.setState({ posts });\n  }\n\n  componentDidMount() {\n    this.unsubcribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"app-container\">\n          <div className=\"panel panel-default\">\n            <div className=\"panel-heading\">\n              <h3 className=\"panel-title\">\n                POST LIST\n            </h3>\n            </div>\n            <div>\n            <h4><Link to={process.env.PUBLIC_URL + '/create'}>Add Post</Link></h4> \n              <table className=\"table table-stripe\">\n                <thead>\n                  <tr>\n                    <th>Title</th>\n                    <th>Description</th>\n                    <th>Author</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.posts.map((post, i) =>\n                    <tr key={i}>\n                      <td><Link to={`/show/${post.key}`}>{post.title}</Link></td>\n                      <td>{post.description}</td>\n                      <td>{post.author}</td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\n//Firebase\r\nimport firebase from '../Firebase';\r\n\r\n//Styles\r\nimport '../styles/edit.css';\r\n\r\nclass Edit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            key: '',\r\n            title: '',\r\n            description: '',\r\n            author: ''\r\n        }\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const ref = firebase.firestore().collection('posts').doc(this.props.match.params.id);\r\n        ref.get().then((doc) => {\r\n            if (doc.exists) {\r\n                const board = doc.data();\r\n                this.setState({\r\n                    key: doc.id,\r\n                    title: board.title,\r\n                    description: board.description,\r\n                    author: board.author\r\n                });\r\n            } else {\r\n                console.log(\"No such document!\");\r\n            }\r\n        });\r\n    }\r\n\r\n    onChange(e){\r\n        const state = this.state\r\n        state[e.target.name] = e.target.value;\r\n        this.setState({ board: state });\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const { title, description, author } = this.state;\r\n\r\n        const updateRef = firebase.firestore().collection('posts').doc(this.state.key);\r\n        updateRef.set({\r\n            title,\r\n            description,\r\n            author\r\n        }).then((docRef) => {\r\n            this.setState({\r\n                key: '',\r\n                title: '',\r\n                description: '',\r\n                author: ''\r\n            });\r\n            this.props.history.push(\"/show/\" + this.props.match.params.id)\r\n        })\r\n            .catch((error) => {\r\n                console.error(\"Error adding document: \", error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"edit-container\">\r\n                    <div>\r\n                        <div>\r\n                            <h3>\r\n                                Edit Post\r\n                            </h3>\r\n                        </div>\r\n                        <div>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <input type=\"text\"\r\n                                    className=\"edit-input\"\r\n                                    name=\"title\"\r\n                                    value={this.state.title} onChange={this.onChange}\r\n                                    placeholder=\"Title\" />\r\n                                <input type=\"text\"\r\n                                    name=\"description\"\r\n                                    className=\"edit-input\"\r\n                                    value={this.state.description} onChange={this.onChange}\r\n                                    placeholder=\"Description\" />\r\n                                <input type=\"text\"\r\n                                    name=\"author\"\r\n                                    className=\"edit-input\"\r\n                                    value={this.state.author} onChange={this.onChange}\r\n                                    placeholder=\"Author\" />\r\n                                <br />\r\n                                <button type=\"submit\" className=\"edit-button\">Submit</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Edit;","import React from 'react';\r\n\r\n//Firebase\r\nimport firebase from '../Firebase';\r\n\r\n//Styles\r\nimport '../styles/create.css'\r\n\r\nclass Create extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.ref = firebase.firestore().collection('posts');\r\n\r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            author: ''\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const { title, description, author } = this.state;\r\n\r\n        this.ref.add({\r\n            title,\r\n            description,\r\n            author\r\n        })\r\n            .then(docRef => {\r\n                this.setState({\r\n                    title: '',\r\n                    description: '',\r\n                    author: ''\r\n                });\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log('Error ', error);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { title, description, author } = this.state;\r\n\r\n        return (\r\n            <div className=\"create-container\">\r\n                <div>\r\n                    <h3>\r\n                        ADD POST\r\n                    </h3>\r\n                </div>\r\n                <div>\r\n                    <form onSubmit={this.onSubmit}>\r\n                            <input type=\"text\"\r\n                                name=\"title\"\r\n                                value={title}\r\n                                className=\"create-input\"\r\n                                onChange={this.onChange}\r\n                                placeholder=\"Title\" />\r\n                            <input type=\"text\"\r\n                                name=\"description\"\r\n                                value={description}\r\n                                className=\"create-input\"\r\n                                onChange={this.onChange}\r\n                                placeholder=\"Description\" />\r\n                            <input type=\"text\"\r\n                                name=\"author\"\r\n                                value={author}\r\n                                className=\"create-input\"\r\n                                onChange={this.onChange}\r\n                                placeholder=\"Author\" />\r\n                                <br />\r\n                        <button type=\"submit\" className=\"create-button\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Create;","import React from 'react';\r\n\r\n//Styles\r\nimport '../styles/comment.css';\r\n\r\nconst Comment = (props) => (\r\n    <div className=\"comment\">\r\n        {props.comment}\r\n    </div>\r\n);\r\n\r\nexport default Comment;","import React from 'react';\r\n\r\n//Firebase\r\nimport firebase from '../Firebase';\r\n\r\n//Router\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Components\r\nimport Comment from './Comment';\r\n\r\n//Styles\r\nimport '../styles/show.css';\r\n\r\nclass Show extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = firebase.firestore().collection('comments');\r\n\r\n        this.state = {\r\n            post: {},\r\n            key: '',\r\n            comment: '',\r\n            comments: [],\r\n        }\r\n\r\n        this.loadComments = this.loadComments.bind(this);\r\n        this.deleteComment = this.deleteComment.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange(e){\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const { comment } = this.state;\r\n\r\n        this.ref.add({ comment })\r\n            .then(docRef => {\r\n                this.setState({ comment: '' });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error ', error);\r\n            });\r\n        \r\n        this.loadComments();\r\n    }\r\n\r\n    loadComments() {\r\n        const refComment = firebase.firestore().collection('comments');\r\n        const comments = [];\r\n\r\n        refComment.get()\r\n            .then(res => {\r\n                res.docs.forEach(doc => {\r\n                    comments.push(doc.data());\r\n                })\r\n                this.setState({\r\n                    comments\r\n                });\r\n            })    \r\n    }\r\n\r\n    componentDidMount() {\r\n        const ref = firebase.firestore().collection('posts').doc(this.props.match.params.id);\r\n        ref.get()\r\n            .then(doc => {\r\n                if (doc.exists) {\r\n                    this.setState({\r\n                        post: doc.data(),\r\n                        key: doc.id,\r\n                        isLoading: false\r\n                    });\r\n                } else {\r\n                    console.log('Error, where is the doc dude?');\r\n                }\r\n            });\r\n        \r\n        this.loadComments();\r\n    }\r\n\r\n\r\n\r\n    delete(id) {\r\n        firebase.firestore().collection('posts').doc(id).delete()\r\n            .then(() => {\r\n                console.log('Document deleted');\r\n                this.props.history.push('/');\r\n            })\r\n            .catch(error => {\r\n                console.error('Error: ', error);\r\n            })\r\n    }\r\n\r\n    deleteComment(id) {\r\n        firebase.firestore().collection('comments').doc(id).delete();\r\n        this.loadComments();\r\n    }\r\n\r\n    render() {\r\n        const { comments, comment } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"show-container\">\r\n                    <div>\r\n                        <h3>\r\n                            {this.state.post.title}\r\n                        </h3>\r\n                    </div>\r\n                    <div>\r\n                        <dl>\r\n                            <h4>Description</h4>\r\n                            <dd>{this.state.post.description}</dd>\r\n                            <h4>Author</h4>\r\n                            <dd>{this.state.post.author}</dd>\r\n                        </dl>\r\n                        <Link to={`/edit/${this.state.key}`}  className=\"edit-button\">Edit Post</Link>\r\n                        <button onClick={this.delete.bind(this, this.state.key)} className=\"delete-button\">Delete</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"comment-container\">\r\n                    <h4>Add a comment...</h4>\r\n                    <input\r\n                        name=\"comment\"\r\n                        className=\"comment-input\"\r\n                        onChange={this.onChange}\r\n                        value={comment}\r\n                        type=\"text\" />\r\n                        <button onClick={this.onSubmit} className=\"comment-button\">Add Comment</button>\r\n                </div>\r\n                \r\n                <div>\r\n                   <div>\r\n                       {\r\n                           comments.map((com, i) => <Comment key={i} comment={com.comment}/>)\r\n                       }\r\n                   </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Show;","import React from 'react';\r\n\r\n//Router\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Styles\r\nimport '../styles/navbar.css';\r\n\r\nconst Nav = () => (\r\n    <div>\r\n        <ul>\r\n            <i className=\"fab fa-react fa-2x\" style={{ float: 'left', padding: '10px', marginLeft: '5px', marginTop: '5px'}}> </i>\r\n            <span style={{ float: 'left', padding: '10px', marginTop: '10px'}}>React-Firebase Admin</span>\r\n            <li><Link to={ process.env.PUBLIC_URL + \"/\"}>Home</Link></li>\r\n        </ul>\r\n    </div>\r\n);\r\n\r\nexport default Nav;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//Router\nimport { HashRouter as Router, Route } from 'react-router-dom';\n\n//Styles\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n//Components\nimport Edit from './components/Edit';\nimport Create from './components/Create';\nimport Show from './components/Show';\nimport Nav from './components/Nav';\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <div>\n            <Nav />\n            <Route path='/' component={App} />\n            <Route path='/edit/:id' component={Edit} />\n            <Route path= '/create' component={Create} />\n            <Route path= '/show/:id' component={Show} />\n        </div>\n    </Router>\n    , document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}